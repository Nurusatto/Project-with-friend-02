/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './__root'
import { Route as _layoutRouteImport } from './__layout'
import { Route as _layoutIndexRouteImport } from './__layout/index'
import { Route as AuthSignUpRouteImport } from './auth/signUp'
import { Route as AuthLoginRouteImport } from './auth/login'
import { Route as Auth_layoutRouteImport } from './auth/__layout'
import { Route as AuthForgotPasswordRouteImport } from './auth/ForgotPassword'
import { Route as _layoutMessageRouteImport } from './__layout/message'

const AuthRouteImport = createFileRoute('/auth')()

const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const _layoutRoute = _layoutRouteImport.update({
  id: '/__layout',
  getParentRoute: () => rootRouteImport,
} as any)
const _layoutIndexRoute = _layoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => _layoutRoute,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/signUp',
  path: '/signUp',
  getParentRoute: () => AuthRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)
const Auth_layoutRoute = Auth_layoutRouteImport.update({
  id: '/__layout',
  getParentRoute: () => AuthRoute,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/auth/ForgotPassword',
  path: '/auth/ForgotPassword',
  getParentRoute: () => rootRouteImport,
} as any)
const _layoutMessageRoute = _layoutMessageRouteImport.update({
  id: '/message',
  path: '/message',
  getParentRoute: () => _layoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/message': typeof _layoutMessageRoute
  '/auth/ForgotPassword': typeof AuthForgotPasswordRoute
  '/auth': typeof Auth_layoutRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signUp': typeof AuthSignUpRoute
  '/': typeof _layoutIndexRoute
}
export interface FileRoutesByTo {
  '/message': typeof _layoutMessageRoute
  '/auth/ForgotPassword': typeof AuthForgotPasswordRoute
  '/auth': typeof Auth_layoutRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signUp': typeof AuthSignUpRoute
  '/': typeof _layoutIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/__layout': typeof _layoutRouteWithChildren
  '/__layout/message': typeof _layoutMessageRoute
  '/auth/ForgotPassword': typeof AuthForgotPasswordRoute
  '/auth': typeof AuthRouteWithChildren
  '/auth/__layout': typeof Auth_layoutRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signUp': typeof AuthSignUpRoute
  '/__layout/': typeof _layoutIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/message'
    | '/auth/ForgotPassword'
    | '/auth'
    | '/auth/login'
    | '/auth/signUp'
    | '/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/message'
    | '/auth/ForgotPassword'
    | '/auth'
    | '/auth/login'
    | '/auth/signUp'
    | '/'
  id:
    | '__root__'
    | '/__layout'
    | '/__layout/message'
    | '/auth/ForgotPassword'
    | '/auth'
    | '/auth/__layout'
    | '/auth/login'
    | '/auth/signUp'
    | '/__layout/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  _layoutRoute: typeof _layoutRouteWithChildren
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthRoute: typeof AuthRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__layout': {
      id: '/__layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof _layoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__layout/': {
      id: '/__layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof _layoutIndexRouteImport
      parentRoute: typeof _layoutRoute
    }
    '/auth/signUp': {
      id: '/auth/signUp'
      path: '/signUp'
      fullPath: '/auth/signUp'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/__layout': {
      id: '/auth/__layout'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof Auth_layoutRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/ForgotPassword': {
      id: '/auth/ForgotPassword'
      path: '/auth/ForgotPassword'
      fullPath: '/auth/ForgotPassword'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/__layout/message': {
      id: '/__layout/message'
      path: '/message'
      fullPath: '/message'
      preLoaderRoute: typeof _layoutMessageRouteImport
      parentRoute: typeof _layoutRoute
    }
  }
}

interface _layoutRouteChildren {
  _layoutMessageRoute: typeof _layoutMessageRoute
  _layoutIndexRoute: typeof _layoutIndexRoute
}

const _layoutRouteChildren: _layoutRouteChildren = {
  _layoutMessageRoute: _layoutMessageRoute,
  _layoutIndexRoute: _layoutIndexRoute,
}

const _layoutRouteWithChildren =
  _layoutRoute._addFileChildren(_layoutRouteChildren)

interface AuthRouteChildren {
  Auth_layoutRoute: typeof Auth_layoutRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  Auth_layoutRoute: Auth_layoutRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignUpRoute: AuthSignUpRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  _layoutRoute: _layoutRouteWithChildren,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthRoute: AuthRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
